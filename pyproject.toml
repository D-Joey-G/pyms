[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pyamlvus"
version = "0.1.0"
description = "Declarative Milvus schemas in YAML"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "pydantic>=2.11.7",
    "pymilvus>=2.6.0",
    "pyyaml>=6.0.2",
    "rich>=14.1.0",
    "typer>=0.17.3",
]

[tool.hatch.build.targets.wheel]
packages = ["src/pyamlvus"]

[project.scripts]
pyamlvus = "pyamlvus.cli:app"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "-v",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: marks tests as unit tests (fast, isolated)",
    "integration: marks tests as integration tests (slower, end-to-end)",
    "performance: marks tests as performance/benchmark tests",
    "slow: marks tests as slow running",
    "parametrize: marks parametrized tests",
    "error_cases: marks tests that test error conditions",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

src = ["src", "packages", "apps"]


target-version = "py313"

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "C4",]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

docstring-code-format = true

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "ruff>=0.13.0",
    "ty>=0.0.1a20",
]
nb = [
    "ipykernel>=6.30.1",
    "jupyter>=1.1.1",
]

[tool.ruff.lint.isort]
# Mark your own packages as first-party so Ruff places them correctly.
known-first-party = ["pyamlvus"]
combine-as-imports = true
lines-between-types = 1
