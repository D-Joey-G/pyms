[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pyms"
version = "0.1.0"
description = "Declarative Milvus schemas in YAML"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "pydantic>=2.5.0",
    "pymilvus>=2.5.0",
    "pyyaml>=6.0.2",
    "rich>=14.1.0",
    "typer>=0.17.3",
]
license = {file = "LICENSE.md"}
authors = [
    {name = "Joey Goldman"},
    {email = "d.joey.goldman@gmail.com"}
]
keywords = [
    "milvus",
    "vector-database",
    "yaml",
    "schema",
    "pymilvus",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed",
]
[project.urls]
Homepage = "https://github.com/D-Joey-G/pyms"
Repository = "https://github.com/D-Joey-G/pyms"
Issues = "https://github.com/D-Joey-G/pyms/issues"
Documentation = "https://github.com/D-Joey-G/pyms#readme"

[tool.hatch.build.targets.wheel]
packages = ["src/pyms"]

[tool.hatch.build.targets.wheel.force-include]
"schema/pyms_schema.json" = "pyms/schema/pyms_schema.json"
"src/pyms/py.typed" = "pyms/py.typed"

[tool.hatch.build.targets.sdist]
include = [
    "schema/pyms_schema.json",
    "src/pyms/py.typed",
]

[project.scripts]
pyms = "pyms.cli:app"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "-v",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: marks tests as unit tests (fast, isolated)",
    "integration: marks tests as integration tests (slower, end-to-end)",
    "performance: marks tests as performance/benchmark tests",
    "slow: marks tests as slow running",
    "parametrize: marks parametrized tests",
    "error_cases: marks tests that test error conditions",
]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 88
indent-width = 4

src = ["src", "packages", "apps"]


target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "C4",]
ignore = []

fixable = ["ALL"]
unfixable = []

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "ruff>=0.13.0",
    "ty>=0.0.1a20",
]
nb = [
    "ipykernel>=6.30.1",
    "jupyter>=1.1.1",
]

[tool.ruff.lint.isort]
known-first-party = ["pyms"]
combine-as-imports = true
lines-between-types = 1
