{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://example.com/pyamlvus.schema.json",
  "title": "Milvus YAML Schema",
  "description": "JSON Schema for validating Milvus collection YAML files used by pyamlvus.",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "name",
    "fields"
  ],
  "properties": {
    "name": {
      "type": "string",
      "description": "Collection name (letters, digits, underscores; must start with a letter).",
      "pattern": "^[A-Za-z][A-Za-z0-9_]*$"
    },
    "alias": {
      "type": "string",
      "description": "Optional collection alias (same rules as name).",
      "pattern": "^[A-Za-z][A-Za-z0-9_]*$"
    },
    "description": {
      "type": "string"
    },
    "autoindex": {
      "type": "boolean",
      "description": "Enable automatic index type selection for missing index types."
    },
    "enable_autoindex": {
      "type": "boolean",
      "description": "Alias of autoindex. Prefer using 'autoindex'."
    },
    "use_autoindex": {
      "type": "boolean",
      "description": "Alias of autoindex. Prefer using 'autoindex'."
    },
    "fields": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "type"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Field name",
            "pattern": "^(?!_)[A-Za-z0-9_-]+$"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "int8",
              "int16",
              "int32",
              "int64",
              "bool",
              "float",
              "double",
              "varchar",
              "json",
              "array",
              "float_vector",
              "binary_vector",
              "sparse_float_vector"
            ]
          },
          "is_primary": {
            "type": "boolean"
          },
          "auto_id": {
            "type": "boolean"
          },
          "nullable": {
            "type": "boolean"
          },
          "enable_analyzer": {
            "type": "boolean"
          },
          "enable_match": {
            "type": "boolean"
          },
          "analyzer_params": {
            "type": "object"
          },
          "multi_analyzer_params": {
            "type": "object"
          },
          "params": {
            "type": "object"
          },
          "max_length": {
            "type": "integer",
            "minimum": 1,
            "maximum": 65535,
            "description": "Required for varchar fields; for varchar array element as well."
          },
          "dim": {
            "type": "integer",
            "minimum": 1,
            "description": "Required for float_vector and binary_vector. Optional for sparse_float_vector."
          },
          "element_type": {
            "type": "string",
            "description": "Required for array fields.",
            "enum": [
              "bool",
              "int8",
              "int16",
              "int32",
              "int64",
              "float",
              "double",
              "varchar",
              "json"
            ]
          },
          "max_capacity": {
            "type": "integer",
            "minimum": 1,
            "maximum": 4096,
            "description": "Required for array fields."
          }
        },
        "allOf": [
          {
            "if": {
              "properties": {
                "type": {
                  "const": "varchar"
                }
              },
              "required": [
                "type"
              ]
            },
            "then": {
              "required": [
                "max_length"
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "float_vector"
                }
              },
              "required": [
                "type"
              ]
            },
            "then": {
              "required": [
                "dim"
              ],
              "properties": {
                "dim": {
                  "maximum": 32768
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "binary_vector"
                }
              },
              "required": [
                "type"
              ]
            },
            "then": {
              "required": [
                "dim"
              ],
              "properties": {
                "dim": {
                  "maximum": 262144
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "array"
                }
              },
              "required": [
                "type"
              ]
            },
            "then": {
              "required": [
                "element_type",
                "max_capacity"
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "array"
                },
                "element_type": {
                  "const": "varchar"
                }
              },
              "required": [
                "type",
                "element_type"
              ]
            },
            "then": {
              "required": [
                "max_length"
              ]
            }
          }
        ]
      }
    },
    "indexes": {
      "type": "array",
      "description": "Index definitions.",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "field"
        ],
        "properties": {
          "field": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "Index type. If omitted and autoindex is enabled, AUTOINDEX may be used.",
            "enum": [
              "FLAT",
              "IVF_FLAT",
              "IVF_SQ8",
              "IVF_PQ",
              "IVF_RABITQ",
              "HNSW",
              "DISKANN",
              "AUTOINDEX",
              "GPU_IVF_FLAT",
              "GPU_IVF_PQ",
              "BIN_FLAT",
              "BIN_IVF_FLAT",
              "MINHASH_LSH",
              "SPARSE_INVERTED_INDEX",
              "INVERTED",
              "BITMAP",
              "TRIE",
              "STL_SORT"
            ]
          },
          "metric": {
            "type": "string",
            "description": "Metric type for vector/sparse indexes.",
            "enum": [
              "L2",
              "IP",
              "COSINE",
              "HAMMING",
              "JACCARD",
              "TANIMOTO",
              "BM25"
            ]
          },
          "params": {
            "type": "object",
            "description": "Index parameters (vary by index type).",
            "properties": {
              "nlist": {
                "type": "integer",
                "minimum": 1
              },
              "M": {
                "type": "integer",
                "minimum": 1
              },
              "efConstruction": {
                "type": "integer",
                "minimum": 1
              },
              "m": {
                "type": "integer",
                "minimum": 1
              },
              "inverted_index_algo": {
                "type": "string",
                "enum": [
                  "DAAT_MAXSCORE",
                  "DAAT_BM25"
                ]
              },
              "bm25_k1": {
                "type": "number",
                "exclusiveMinimum": 0
              },
              "bm25_b": {
                "type": "number",
                "exclusiveMinimum": 0
              }
            },
            "additionalProperties": true
          }
        }
      }
    },
    "functions": {
      "type": "array",
      "description": "Function definitions (e.g., BM25, TEXT_EMBEDDING).",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "BM25",
              "TEXT_EMBEDDING",
              "RERANK"
            ]
          },
          "input_field_names": {
            "description": "List of input fields.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1
          },
          "input_fields": {
            "description": "Alias for input_field_names.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1
          },
          "fields": {
            "description": "Alias for input_field_names.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1
          },
          "input_field": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "output_field_names": {
            "description": "Output field(s) for function results.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1
          },
          "output_field": {
            "type": "string"
          },
          "params": {
            "type": "object"
          }
        },
        "allOf": [
          {
            "anyOf": [
              {
                "required": [
                  "input_field_names"
                ]
              },
              {
                "required": [
                  "input_fields"
                ]
              },
              {
                "required": [
                  "fields"
                ]
              },
              {
                "required": [
                  "input_field"
                ]
              },
              {
                "required": [
                  "field"
                ]
              }
            ]
          },
          {
            "anyOf": [
              {
                "required": [
                  "output_field_names"
                ]
              },
              {
                "required": [
                  "output_field"
                ]
              }
            ]
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "TEXT_EMBEDDING"
                }
              },
              "required": [
                "type"
              ]
            },
            "then": {
              "properties": {
                "params": {
                  "type": "object",
                  "required": [
                    "model"
                  ],
                  "properties": {
                    "model": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              },
              "required": [
                "params"
              ]
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "BM25"
                }
              },
              "required": [
                "type"
              ]
            },
            "then": {
              "properties": {
                "params": {
                  "type": "object",
                  "properties": {
                    "k1": {
                      "type": "number",
                      "exclusiveMinimum": 0
                    },
                    "b": {
                      "type": "number",
                      "exclusiveMinimum": 0
                    }
                  },
                  "additionalProperties": true
                }
              }
            }
          }
        ]
      }
    },
    "settings": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "consistency_level": {
          "type": "string",
          "enum": [
            "Strong",
            "Bounded",
            "Eventually"
          ],
          "description": "Milvus consistency level."
        },
        "ttl_seconds": {
          "type": "integer",
          "minimum": 0
        },
        "enable_dynamic_field": {
          "type": "boolean"
        },
        "autoindex": {
          "type": "boolean"
        },
        "enable_autoindex": {
          "type": "boolean"
        },
        "use_autoindex": {
          "type": "boolean"
        }
      }
    }
  }
}
